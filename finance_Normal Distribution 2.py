import numpy as np
import math
import matplotlib.pyplot as plt
from scipy.stats import norm

# set up empty list to hold our ending values for each simulated price series
result = []
# Define Variables
S = 698.98755 #apple['Adj Close'][-1]  # starting stock price (i.e. last available real stock price)
T = 252  # Number of trading days
mu = 0.2309  # Return
vol = 0.4259  # Volatility
# choose number of runs to simulate - I have chosen 10,000
for i in range(10000):
    # create list of daily returns using random normal distribution
    daily_returns = np.random.normal(mu / T, vol / math.sqrt(T), T) + 1

    # set starting price and create price series generated by above random daily returns
    price_list = [S]

    for x in daily_returns:
        price_list.append(price_list[-1] * x)
    # plot data from each individual run which we will plot at the end
    plt.plot(price_list)

    # append the ending value of each simulated run to the empty list we created at the beginning
    result.append(price_list[-1])
# show the plot of multiple price series created above
plt.show()
# create histogram of ending stock values for our mutliple simulations
plt.hist(result, bins=50)
plt.show()

print('Mean Price', np.mean(result))
print('Median Price', np.median(result))
print('STD', np.std(result))
print('Min Price', np.min(result))
print('Max Price', np.max(result))

print("5% quantile =",np.percentile(result,5))
print("95% quantile =",np.percentile(result,95))